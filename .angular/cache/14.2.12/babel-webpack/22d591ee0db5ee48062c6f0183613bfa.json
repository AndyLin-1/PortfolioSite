{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ThemeService = /*#__PURE__*/(() => {\n  class ThemeService {\n    constructor() {\n      //Initialize Subject to Observe through the local storage\n      this.isDarkModeSubject = new BehaviorSubject(localStorage.getItem('isDarkMode') === 'true' || localStorage.getItem('isDarkMode') === null); //Sets Initial Theme\n\n      this.setMode();\n    }\n    /* Toggle Theme */\n\n\n    toggleDarkMode() {\n      const newMode = !this.isDarkModeSubject.value;\n      localStorage.setItem('isDarkMode', newMode.toString());\n      this.isDarkModeSubject.next(newMode);\n      this.setMode();\n    }\n    /* Returns Observable for theme */\n\n\n    getIsDarkMode() {\n      return this.isDarkModeSubject.asObservable();\n    }\n    /* Changes Document Theme */\n\n\n    setMode() {\n      const root = document.documentElement;\n\n      if (this.isDarkModeSubject.value) {\n        root.classList.remove('light');\n        root.classList.add('dark');\n      } else {\n        root.classList.remove('dark');\n        root.classList.add('light');\n      }\n    }\n\n  }\n\n  ThemeService.ɵfac = function ThemeService_Factory(t) {\n    return new (t || ThemeService)();\n  };\n\n  ThemeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThemeService,\n    factory: ThemeService.ɵfac,\n    providedIn: 'root'\n  });\n  return ThemeService;\n})();","map":null,"metadata":{},"sourceType":"module"}